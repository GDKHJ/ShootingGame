1. PlayerFire.cs 수정
 -> 수정 내역
    발사 방식을 오브젝트 풀로 변경
    --> Destroy를 하지 않음.
    관련 코드들을 수정합니다.

2. Enemy.cs 수정
   --> OnCollisonEnter에서의 Destroy
         를 비활성화로 변경합니다.

3. EnemyManager.cs 수정
  --> 시간을 체크해 무한 생성하는 공장
        오브젝트 풀로 변경

4. Enemy.cs
    적도 풀에서 생성되는 만큼
    Destroy -> 비활성화로 변환


5. DestroyZone에서의 Destroy도 변경

현재의 코드로 실행할 경우  EnemyManager
를 기준으로 생성이 진행됩니다.

스폰 지점을 기준으로 생성될 수 있게
수정해주세요.

오브젝트 풀을 사용할 경우
Start는 최초 1회 실행만 되기 때문에
그 이후의 값을 대상으로는 처리되지 않음.

현재 Start -> OnEnable로 이동

의도
Awake -> OnEnable -> Start -> Update
Start는 최초 1회 실행
OnEnable은 활성화 단계에서 설정






스테이지 관련 기능 추가
1. 현재는 적 생성 기능이 제공되고 있음.
2. 적에 관련된 데이터(SO / class / json)
3. 스테이지에 대한 처리(보스 출현 등)


StageManager.cs 생성
EnemyManager.cs 수정
Enemy 수정

4. BossManager.cs 생성

Enemy 생성과 Boss 생성은
비슷하지만 보스에 특화된 기능들을
따로 관리할 생각이 있다면
두 생성을 나눠주는 것이 더 편리할 수 있으며
StageManager를 통해 조건에 따라
보스 소환과 일반 소환 기준을 나눠서 구현합니다.

5. Boss.cs 생성

6. Enemy, Boss , Player 등 게임에서 필요한
데이터들을 스크립터블 오브젝트나
클래스 또는 json으로 활용해 시스템을 더 확장
해보도록 합시다.
























































